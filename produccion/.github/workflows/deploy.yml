name: Deploy to AWS LightSail

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: intertravel_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          admin-panel/package-lock.json
          client-app/package-lock.json

    - name: Install Backend Dependencies
      run: |
        cd backend
        npm ci

    - name: Run Backend Tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: intertravel_test
        DB_USER: postgres
        DB_PASSWORD: postgres

    - name: Build Admin Panel
      run: |
        cd admin-panel
        npm ci
        npm run build

    - name: Build Client App
      run: |
        cd client-app
        npm ci
        npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'

    steps:
    - uses: actions/checkout@v3

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          # Ir al directorio del proyecto
          cd /var/www/intertravel
          
          # Hacer backup de la versión actual
          sudo tar -czf /var/www/intertravel/backups/backup_$(date +%Y%m%d_%H%M%S).tar.gz .
          
          # Actualizar código
          git pull origin main
          
          # Instalar dependencias del backend
          cd backend
          npm ci --production
          
          # Build admin panel
          cd ../admin-panel
          npm ci
          npm run build
          
          # Build client app
          cd ../client-app
          npm ci
          npm run build
          
          # Restart applications with PM2
          pm2 restart ecosystem.config.js
          
          # Reload Nginx
          sudo nginx -t && sudo systemctl reload nginx
          
          echo "✅ Deploy completado"
        EOF

    - name: Health Check
      run: |
        sleep 30
        curl -f https://intertravel.com.ar/api/health || exit 1
        echo "✅ Health check passed"

    - name: Notify Success
      if: success()
      run: echo "🎉 Deploy successful to ${{ github.ref }}"

    - name: Notify Failure
      if: failure()
      run: echo "❌ Deploy failed to ${{ github.ref }}"