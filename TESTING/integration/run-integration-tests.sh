#!/bin/bash

# ==============================================
# üîß AGENTE 3: SCRIPT DE TESTING COMPLETO  
# ==============================================

echo "üß™ ===== AGENTE 3: INTEGRATION TESTING SUITE ====="
echo ""
echo "‚ö° Iniciando verificaci√≥n completa del sistema admin..."
echo ""

# Verificar estructura de directorios
echo "üìÅ VERIFICANDO ESTRUCTURA DE DIRECTORIOS..."

# Frontend API Routes
if [ -d "frontend/src/app/api/admin" ]; then
    echo "‚úÖ Frontend API routes encontradas"
    echo "   üìä Conteo de rutas:"
    find frontend/src/app/api/admin -name "route.ts" | wc -l | sed 's/^/   /'
else
    echo "‚ùå Frontend API routes NO encontradas"
fi

# Backend Modules
if [ -d "backend/modules" ]; then
    echo "‚úÖ Backend modules encontrados"
    echo "   üìä Conteo de m√≥dulos:"
    ls backend/modules/*.js 2>/dev/null | wc -l | sed 's/^/   /'
else
    echo "‚ùå Backend modules NO encontrados"
fi

echo ""
echo "üîç AN√ÅLISIS DETALLADO DE RUTAS API..."

# Verificar rutas espec√≠ficas del admin
admin_routes=(
    "users"
    "packages" 
    "bookings"
    "settings"
    "destinations"
    "fallback"
)

for route in "${admin_routes[@]}"; do
    if [ -d "frontend/src/app/api/admin/$route" ]; then
        methods=$(grep -r "export async function" "frontend/src/app/api/admin/$route" 2>/dev/null | grep -o "function [A-Z]*" | grep -o "[A-Z]*" | tr '\n' ',' | sed 's/,$//')
        echo "‚úÖ /$route - M√©todos: ${methods:-"NONE"}"
    else
        echo "‚ùå /$route - NO ENCONTRADA"
    fi
done

echo ""
echo "üîß VERIFICANDO M√ìDULOS BACKEND..."

# Verificar m√≥dulos backend cr√≠ticos
backend_modules=(
    "users.js"
    "packages.js"
    "bookings.js"
    "booking-analytics.js"
    "settings-manager.js"
    "destinations.js"
    "smart-fallback-system.js"
)

for module in "${backend_modules[@]}"; do
    if [ -f "backend/modules/$module" ]; then
        echo "‚úÖ $module encontrado"
    else
        echo "‚ùå $module NO encontrado"
    fi
done

echo ""
echo "üìä RESUMEN EJECUTIVO:"

# Contar rutas implementadas
total_routes=$(find frontend/src/app/api/admin -name "route.ts" 2>/dev/null | wc -l)
total_modules=$(ls backend/modules/*.js 2>/dev/null | wc -l)

echo "   üìÅ Total rutas frontend: $total_routes"
echo "   üîß Total m√≥dulos backend: $total_modules"

# Calcular score de completitud
if [ $total_routes -gt 15 ] && [ $total_modules -gt 10 ]; then
    echo "   üéâ ESTADO: SISTEMA FUNCIONAL (>90%)"
elif [ $total_routes -gt 10 ] && [ $total_modules -gt 7 ]; then
    echo "   ‚ö†Ô∏è  ESTADO: SISTEMA PARCIAL (70-90%)"
else
    echo "   üö® ESTADO: NECESITA DESARROLLO (<70%)"
fi

echo ""
echo "üí° RECOMENDACIONES DEL AGENTE 3:"
echo "   ‚Ä¢ Ejecutar tests de integraci√≥n en vivo"
echo "   ‚Ä¢ Verificar conectividad frontend-backend"
echo "   ‚Ä¢ Validar autenticaci√≥n de rutas protegidas"
echo "   ‚Ä¢ Implementar logging y monitoring"
echo ""
echo "üöÄ AGENTE 3: AN√ÅLISIS COMPLETADO"
echo ""
