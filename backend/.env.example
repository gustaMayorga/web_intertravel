# ===============================================
# CONFIGURACIÓN DE SEGURIDAD - EJEMPLO
# ===============================================

# IMPORTANTE: Copia este archivo como .env y cambia TODOS los valores

# Servidor
PORT=3002
NODE_ENV=development

# Seguridad JWT - GENERAR UNO NUEVO Y SEGURO
JWT_SECRET=CAMBIAR-POR-SECRETO-SEGURO-64-CARACTERES-MINIMO-CON-NUMEROS-Y-SIMBOLOS

# Credenciales Admin - CAMBIAR INMEDIATAMENTE
ADMIN_PASSWORD=CAMBIAR-CONTRASEÑA-ADMIN-SEGURA
AGENCY_PASSWORD=CAMBIAR-CONTRASEÑA-AGENCIA-SEGURA

# Base de datos - CONFIGURAR CON CREDENCIALES REALES
DATABASE_URL=postgresql://usuario_seguro:contraseña_segura@localhost:5432/intertravel_prod
DB_HOST=localhost
DB_PORT=5432
DB_NAME=intertravel_prod
DB_USER=intertravel_user
DB_PASSWORD=CONTRASEÑA-DB-SEGURA

# Travel Compositor - OBTENER CREDENCIALES REALES
TC_USERNAME=TU-USUARIO-REAL-TC
TC_PASSWORD=TU-CONTRASEÑA-REAL-TC
TC_MICROSITE_ID=tu-microsite-id

# URLs permitidas - CONFIGURAR SEGÚN ENTORNO
FRONTEND_URL=http://localhost:3005
ALLOWED_ORIGINS=http://localhost:3005,https://tu-dominio-produccion.com

# Email (opcional)
EMAIL_SERVICE=gmail
EMAIL_USER=tu-email@gmail.com
EMAIL_PASS=tu-app-password

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000
LOGIN_RATE_LIMIT_MAX=5

# Logging
LOG_LEVEL=info
LOG_FILE=logs/intertravel.log

# Encriptación
ENCRYPTION_KEY=CLAVE-ENCRIPTACION-32-CARACTERES

# SSL/TLS (para producción)
SSL_CERT_PATH=/path/to/ssl/certificate.crt
SSL_KEY_PATH=/path/to/ssl/private.key

# ===============================================
# INSTRUCCIONES DE SEGURIDAD
# ===============================================

# 1. NUNCA subir este archivo .env a Git
# 2. Usar contraseñas de al menos 12 caracteres
# 3. Incluir mayúsculas, minúsculas, números y símbolos
# 4. Cambiar JWT_SECRET por algo único y aleatorio
# 5. En producción, usar variables de entorno del servidor
# 6. Rotar credenciales periódicamente
# 7. Usar HTTPS siempre en producción

# ===============================================
# GENERADORES SEGUROS
# ===============================================

# Para generar JWT_SECRET seguro (Node.js):
# require('crypto').randomBytes(64).toString('hex')

# Para generar contraseñas seguras (bash):
# openssl rand -base64 32

# Para verificar fortaleza de contraseñas:
# https://www.passwordmeter.com/